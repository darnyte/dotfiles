#!/usr/bin/env bash

# Edit memo
#
# @param 1 - KEY of memo to edit
edit()
{
	if [ "$KEY" == "$1" ]
	then
		"$ACTION" "$MEMO"
		return 1
	fi
}

# Print memo KEY and title
print()
{
	read -r -n "$COLS" < "$MEMO" &&
		echo "[$KEY] $REPLY"
}

# Enumerate memos
#
# @param ... - function to invoke on every file (optional)
memos()
{
	local COLS=${COLS:-$(( $(tput cols)-4 ))}
	local KEYS='0123456789abcdefghijklmnopqrstuvwxyz'
	local KEY
	local N=0
	local MEMO

	for MEMO in ${MEMOS}/*
	do
		[ -r "$MEMO" ] || continue

		KEY=${KEYS:$(( N++ )):1}
		"${@:-print}" || break
	done
}

# Add a memo
#
# @param ... - memo text
add()
{
	echo "$@" >> "$MEMOS/$(date +%Y-%m-%d-%H%M%S)"
}

# Read and execute user input
shell()
{
	[ -t 0 ] || return
	[ -t 1 ] || return

	local ACTION
	local PROMPT

	reset()
	{
		ACTION=${EDITOR:-vim}
		PROMPT='#'
	}

	reset && for ((;;))
	do
		read -r -s -p $'\r'"$PROMPT " -n 1 || return $?

		case $REPLY in
			$'\E'|'')
				echo
				break
				;;
			'-')
				ACTION='rm'
				PROMPT='-'
				;;
			'+')
				read -r -p $'\r''+ ' || return $?
				add "$REPLY"
				memos print
				;;
			*)
				echo "$REPLY"
				memos edit "$REPLY"
				reset
				memos print
				;;
		esac
	done

	unset reset
}

readonly MEMOS=${MEMOS:-$HOME/.memos}

[ -d "$MEMOS" ] || mkdir "$MEMOS" || exit $?

if [ "${BASH_SOURCE[0]}" == "$0" ]
then
	if (( $# ))
	then
		add "$@"
	else
		memos print
		shell
	fi
fi
