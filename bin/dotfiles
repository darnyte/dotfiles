#!/bin/bash

# Enumerate files
#
# @param ... - function to call for every matching file
enum()
{
	same()
	{
		diff -rq $SRC $DST
	}

	wire()
	{
		rm -rf $DST && ln -s $SRC $DST
	}

	unwire()
	{
		same && rm -rf $DST
	}

	symlink()
	{
		local DST=${SRC##*/}
		DST=~/.${DST%.*}
		$@
	}

	load()
	{
		. $SRC
	}

	sh()
	{
		$@
	}

	local TYPE SRC
	for SRC in $DOTFILES/*/*.$1
	do
		[ -r $SRC ] || continue

		TYPE=${SRC%/*}
		TYPE=${TYPE##*/}
		type $TYPE &>/dev/null || continue
		$@
	done

	unset sh
	unset load
	unset symlink
	unset unwire
	unset wire
	unset same
}

# Print invocation
invocation()
{
	cat << EOF
export DOTFILES=$DOTFILES
export PATH=\$DOTFILES/bin:\$PATH
. \$DOTFILES/bin/dotfiles true && setup
EOF
}

# Install/Update dot file repository
update()
{
	[ -d $DOTFILES ] || return 1

	enum symlink unwire &>/dev/null

	type git &>/dev/null &&
		cd $DOTFILES &&
		git fetch &&
		git merge master origin

	enum symlink wire
	invocation > $RC
}

# Check if all links are up to date
check()
{
	enum symlink same
	invocation | diff -q $RC -
}

# Source all shell files within $DOTFILES
setup()
{
	alias()
	{
		local C ALIAS=${1%%=*} CMD=${@#*=}
		for C in $CMD
		do
			case $C in
				sudo|*=*)
					continue
					;;
			esac
	
			command -v "$C" &>/dev/null &&
				eval "$ALIAS(){ $CMD \"\$@\"; }"

			break
		done
	}

	enum sh load
	unset alias
}

readonly DOTFILES=${DOTFILES:-`cd ${0%/*} && echo ${PWD%/*}`}
readonly RC=${RC:-~/.bash_aliases}

${@:-check}
