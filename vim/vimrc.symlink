set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_cmd='CtrlPBuffer'

set nocompatible
set ts=4
set sw=4
set ls=0
set nowrap
set noruler
set linebreak
set autoindent
set viminfo^=h

syntax on

" Begin syntax synchronisation always from the start
autocmd BufEnter * :syntax sync fromstart

" Highlight tabs within lines, trailing whitespace and spaces at the
" beginning of lines
match errorMsg /[^\t]\zs\t\+\|\s\+$\|^[\t]*[ ]\+[\t]*[^\*]/

" Remove trailing white space before saving
autocmd BufWritePre * :%s/\s\+$//e

" Color scheme settings
set background=dark
let g:solarized_termcolors=256

set t_Co=256
color sahara

" Always show as much as possible of the last line instead of @
set display+=lastline

" Change matching parenthesis style
:hi MatchParen cterm=bold ctermbg=none ctermfg=none

" Always move cursor up/down by visual line instead of text line
noremap j gj
noremap k gk

" Set wrapping for certain file types
au FileType html,tex,markdown set wrap

" Additional file types
au BufNewFile,BufRead *.hx setf haxe
au BufNewFile,BufRead *.glsl set filetype=glsl

" Set a default file type
au BufNewFile,BufRead * setf markdown

" Use tab to complete words
" (from http://vim.wikia.com/wiki/Autocomplete_with_TAB_when_typing_words)
function! TabComplete()
	if col( '.' ) > 1 && strpart( getline( '.' ), col( '.' )-2, 3 ) =~ '^\w'
		return "\<C-N>"
	else
		return "\<Tab>"
	endif
endfunction
inoremap <Tab> <C-R>=TabComplete()<CR>

" Focus mode
" (originally from https://gist.github.com/1824502)
function! ToggleFocusMode()
	if( &foldcolumn != 12 )
		set foldcolumn=12
		set columns=60
		set wrap
		set display=lastline
		hi FoldColumn ctermbg=none
		hi NonText ctermfg=0
	else
		set foldcolumn=0
	endif
endfunc
nnoremap <F1> :call ToggleFocusMode()<CR>

" Disable auto-indent for pasting from clipboard
set pastetoggle=<F2>

" Convert spaces to tabs
nnoremap <F3> :%s/    /\t/g<CR>

" Fold by indent
nnoremap <F4> :set foldmethod=indent<CR>

" Disable highlighting of search pattern matches
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

" Cycle through open buffers
nnoremap <silent> <C-j> :bn<CR>
nnoremap <silent> <C-k> :bp<CR>

" Use Tabs
function! UseTabs()
	" Highlight tabs within lines, trailing whitespace and
	" spaces at the beginning of lines
	match errorMsg /[^\t]\zs\t\+\|\s\+$\|^[\t]*[ ]\+[\t]*[^\*]/
	set noexpandtab
endfunc
nnoremap <F5> :call UseTabs()<CR>

" Use Spaces
function! UseSpaces()
	" Highlight tabs
	match errorMsg /[\t]/
	set expandtab
endfunc
nnoremap <F6> :call UseSpaces()<CR>
